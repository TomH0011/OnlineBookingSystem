spring:
  application:
    name: online-booking-system
  
  datasource:
    url: jdbc:mysql://localhost:3306/booking_system?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
  
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
            scope:
              - email
              - profile
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID:your-facebook-client-id}
            client-secret: ${FACEBOOK_CLIENT_SECRET:your-facebook-client-secret}
            scope:
              - email
              - public_profile
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v2/userinfo
            user-name-attribute: id
          facebook:
            authorization-uri: https://www.facebook.com/v18.0/dialog/oauth
            token-uri: https://graph.facebook.com/v18.0/oauth/access_token
            user-info-uri: https://graph.facebook.com/me?fields=id,name,email
            user-name-attribute: id
  
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: 587
    username: ${MAIL_USERNAME:your-email@gmail.com}
    password: ${MAIL_PASSWORD:your-app-password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  port: 8080
  servlet:
    context-path: /api

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey}
  expiration: 86400000 # 24 hours

# Stripe Configuration
stripe:
  secret-key: ${STRIPE_SECRET_KEY:sk_test_your_stripe_secret_key}
  publishable-key: ${STRIPE_PUBLISHABLE_KEY:pk_test_your_stripe_publishable_key}

# AI Backend Configuration
ai:
  backend-url: ${AI_BACKEND_URL:http://localhost:8000}

logging:
  level:
    com.booking: DEBUG
    org.springframework.security: DEBUG
