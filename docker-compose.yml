version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: booking_mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: booking_system
      MYSQL_USER: booking_user
      MYSQL_PASSWORD: booking_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - booking_network

  # Java Spring Boot Backend
  java_backend:
    build:
      context: ./backend-java
      dockerfile: Dockerfile
    container_name: booking_java_backend
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=booking_user
      - DB_PASSWORD=booking_password
      - DB_NAME=booking_system
      - JWT_SECRET=your_jwt_secret_key_here
      - STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
      - STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
      - GOOGLE_CLIENT_ID=your_google_client_id
      - GOOGLE_CLIENT_SECRET=your_google_client_secret
      - FACEBOOK_CLIENT_ID=your_facebook_client_id
      - FACEBOOK_CLIENT_SECRET=your_facebook_client_secret
      - MAIL_HOST=smtp.gmail.com
      - MAIL_USERNAME=your_email@gmail.com
      - MAIL_PASSWORD=your_app_password
      - AI_BACKEND_URL=http://python_backend:8000
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - booking_network

  # Python FastAPI Backend
  python_backend:
    build:
      context: ./backend-python
      dockerfile: Dockerfile
    container_name: booking_python_backend
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=booking_user
      - DB_PASSWORD=booking_password
      - DB_NAME=booking_system
      - JWT_SECRET=your_jwt_secret_key_here
      - OPENAI_API_KEY=your_openai_api_key
      - GEMINI_API_KEY=your_gemini_api_key
      - ELEVENLABS_API_KEY=your_elevenlabs_api_key
      - JAVA_BACKEND_URL=http://java_backend:8080/api
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    networks:
      - booking_network

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: booking_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - REACT_APP_AI_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - java_backend
      - python_backend
    networks:
      - booking_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: booking_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - java_backend
      - python_backend
    networks:
      - booking_network

volumes:
  mysql_data:

networks:
  booking_network:
    driver: bridge
